*{
    margin: 0;
    padding: 0;
    box-sizing:border-box;
}

body{
    height: 100svh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: radial-gradient(rgb(29, 28, 28),black);
}


$height-of-triangle: 30svh;
$width-of-triangle: 30svh;
$display-size: 10svh;
.triangle{
	display: flex;
	position: absolute;
	justify-content: center;
	top: 100px;
	left: 300px;
	//background-color: white;
	height: $height-of-triangle;
	width: $width-of-triangle;
}

.display{
	display: flex;
	position: inherit;
	width: $display-size; height: $display-size;
	font-size: 4.5svh;

	//background-image: linear-gradient(45deg, rgb(115, 148, 175), rgb(255, 199, 235), rgb(166, 167, 255), rgb(196, 232, 255));

	background-image: linear-gradient(45deg, rgb(0, 240, 255), rgb(130, 0, 255), rgb(255, 0, 115));

	background-repeat: no-repeat;
	background-size: 150% 200%;
	border-radius: 50%;
	
	outline: 0.4svh solid;
	outline-color: white;
	
	animation: move 10s cubic-bezier(0.4,0,0.2,1) infinite;
	transition: background-position 0.3s;
	
}



#top{
	position: inherit;
	top: - ($display-size * 0.5);
	align-items: center;
	justify-content: center;
}

#left{
	position: inherit;
	top: $height-of-triangle - ($display-size * 0.5);
	align-items: center;
	justify-content: center;
	margin-right: $width-of-triangle;
}


#right{
	position: inherit;
	top: $height-of-triangle - ($display-size * 0.5);
	align-items: center;
	justify-content: center;
	margin-left: $width-of-triangle;
}

$pos: 38svh + 15.5svh;
$rec-height: 40svh;
$rec-width: 60svh;
$input-size: 7svh;
$output-width: 12svh;
.input{
	display: flex;
	position: absolute;
	top:50svh;
	left: 50svh;
	//background-color: white;
	height: $rec-height;
	width: $rec-width;
}


@for $i from 1 through 3{
	$pos: $rec-height * 0.5  * ($i - 1) - ($input-size * 0.5);

	.btn#{$i}{
		display: flex;
		position: absolute;
		width: $input-size; height: $input-size;
		font-size: 4.5svh;
		cursor: pointer;

		background-image: linear-gradient(45deg, rgb(115, 148, 175), rgb(255, 199, 235), rgb(166, 167, 255), rgb(196, 232, 255));

		background-repeat: no-repeat;
		background-size: 150% 200%;
		border: none;
		border-radius: 50%;
	
		outline: 0.4svh solid;
		outline-color: white;
	
		animation: move 10s cubic-bezier(0.4,0,0.2,1) infinite;
		transition: background-position 0.3s;	
		top: $pos; 
	}

	#dsp#{$i} {
		display: flex;
		position: absolute;
		width: $output-width; height: $input-size;
		outline: 0.4svh solid;

		top: $pos;
;
		border-radius: 5svh;
		background: white;
		left: $rec-width - ($output-width * 0.5);
	}
}

// 70, 92, 117
#l{left: - ($input-size * 0.5)}
#r{left: $rec-width * 0.3737}


@keyframes move {
  0% {
    background-position: 0% 0;
  }
  50% {
    background-position: 100% 0;
  }

  100%{
    background-position: 0% 0;
  }
}
