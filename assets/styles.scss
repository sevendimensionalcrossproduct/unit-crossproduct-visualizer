*{
    margin: 0;
    padding: 0;
    box-sizing:border-box;
}

body{
    height: 100svh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: linear-gradient(to bottom, rgb(76, 41, 111),#884227);
}

.glass{
  position: absolute;
  display: flex;
  flex-direction: column;
  padding: 3svh;
  border: 0.2svh solid rgba(20, 20, 20, 0.1);
  border-radius: 5svh;
  box-shadow: 0.2svh 0.7svh 1svh rgba(35, 35, 35, 0.7);
  backdrop-filter: blur(2svh);
  -webkit-backdrop-filter: blur(2svh);
  background: rgba(0, 0, 0, 0.5);
}

$height-of-triangle: 30svh;
$width-of-triangle: 30svh;
$display-size: 10svh;
.triangle{
	display: flex;
	position: absolute;
	justify-content: center;
	top: 30svh;
	left: 140svh;
	//background-color: white;
	height: $height-of-triangle;
	width: $width-of-triangle;
}

.display{
	display: flex;
	position: absolute;
	width: $display-size; height: $display-size;
	font-size: 4.5svh;

	background-image: linear-gradient(45deg, rgb(0, 240, 255), rgb(130, 0, 255), rgb(255, 0, 115));

	background-repeat: no-repeat;
	background-size: 150% 200%;
	border-radius: 50%;
	
	outline: 0.4svh solid;
	outline-color: white;
	
	animation: move 10s cubic-bezier(0.4,0,0.2,1) infinite;
	transition: background-position 0.3s;
	
}



#top{
	position: inherit;
	top: - ($display-size * 0.5);
	align-items: center;
	justify-content: center;
}

#left{
	position: inherit;
	top: $height-of-triangle - ($display-size * 0.5);
	align-items: center;
	justify-content: center;
	margin-right: $width-of-triangle;
}


#right{
	position: inherit;
	top: $height-of-triangle - ($display-size * 0.5);
	align-items: center;
	justify-content: center;
	margin-left: $width-of-triangle;
}

$backgrounds:(
	linear-gradient(to top, rgba(145, 35, 206, 0.97), #ea1c69),
	linear-gradient(to top, #963fff, #2fc5d5),
	linear-gradient(to top, #ff0078, #ff8f00),
	linear-gradient(to top, red, orange)
);

.button{
		display: flex;
		position: relative;
		border: solid 0.2svh transparent;
		border-radius: 50%;
		margin: 3svh;
		-webkit-background-clip: text;
		background-clip: text;
		width: 7svh; height: 7svh;
		justify-content: center;
		align-items: center;
		font-size: 3.5svh;
		cursor: pointer;
		display: inline-block;
		transition: transform 0.3s ease;

		&:hover{
			transform: scale(1.2);
		}
}

@mixin buttonStyles($i){
	background: nth($backgrounds, $i);
	background-clip: text;
	color: transparent;
	
	&::before{
		content: '';
		position: absolute;
		top: 0svh; right: 0svh; bottom: 0svh; left: 0svh;
		z-index:-1;
		margin: -0.7svh;
		border-radius: inherit;
		background: nth($backgrounds, $i);
		mask: radial-gradient(circle, transparent 60%, white 62%);
	}
}

@for $i from 1 through 3{
	#lbtn#{$i}, #rbtn#{$i}{
		@include buttonStyles($i);
	}
}

#l{left: 20svh}
#r{left: 65svh}


@keyframes move {
  0% {
    background-position: 0% 0;
  }
  50% {
    background-position: 100% 0;
  }

  100%{
    background-position: 0% 0;
  }
}

.clickedStyles{
		display: flex;
		position: relative;
		border: solid 0.2svh transparent;
		border-radius: 50%;
		margin: 3svh;
		-webkit-background-clip: text;
		background-clip: text;
		width: 7svh; height: 7svh;
		justify-content: center;
		align-items: center;
		font-size: 3.5svh;
		cursor: pointer;
		display: inline-block;
		transition: transform 0.3s ease;
		color: white;
		box-shadow:  0vh 0vh 2vh  #ffffff, inset 0vh -0vh 1vh #fff;
		text-shadow: 0vh 0vh 2vh #ffffff;
		background-clip: text;
		
		&::after{
		content: '';
		position: absolute;
		top: 0svh; right: 0svh; bottom: 0svh; left: 0svh;
		z-index:-1;
		margin: -0.7svh;
		border-radius: inherit;
		background: white;
		box-shadow: inset 0vh 0vh 2vh #ffffff;


		mask: radial-gradient(circle, transparent 55%, white 60%);
		
		}

		&:hover{
			transform: scale(1.2);
		}

}


/*
	#dsp#{i} {
		display: flex;
		position: absolute;
		width: output-width; height: input-size;
		outline: 0.4svh solid;

		top: $pos;
;
		border-radius: 5svh;
		background: white;
		left: rec-width - (output-width * 0.5);
		color: transparent;
*/
